  WhereAreWeIntent:
    speech:
      type: plain
      text: >
        {%- if is_state('device_tracker.pi_mate9', 'home') and
               is_state('device_tracker.hazbag', 'home') and
               is_state('device_tracker.lizzie', 'home') and
               is_state('device_tracker.kristen', 'home') -%}
          Everyone is in the house
        {% endif %}

        {%- if is_state('device_tracker.hazbag', 'not_home') and
               is_state('device_tracker.lizzie', 'home') and
               is_state('device_tracker.kristen', 'home') and
               is_state('device_tracker.pi_mate9', 'home') -%}
        Harriet has left. but everyone else is in
        {% endif %}

        {%- if is_state('device_tracker.hazbag', 'home') and
               is_state('device_tracker.pi_mate9', 'home') and
               is_state('device_tracker.lizzie', 'not_home') and
               is_state('device_tracker.kristen', 'home') -%}
          Lizzie has left and kristen, sam and harriet are in.
        {% endif %}

        {%- if is_state('device_tracker.hazbag', 'home') and
               is_state('device_tracker.lizzie', 'home') and
               is_state('device_tracker.kristen', 'not_home') and
               is_state('device_tracker.pi_mate9', 'home') -%}
          kristen has left. but harriet, sam and lizzie are home.
        {% endif %}

        {%- if is_state('device_tracker.hazbag', 'not_home') and
               is_state('device_tracker.lizzie', 'not_home') and
               is_state('device_tracker.kristen', 'not_home') and
               is_state('device_tracker.pi_mate9', 'home') -%}
          Sam is the only one in.
        {% endif %}

        {%- if is_state('device_tracker.hazbag', 'not_home') and
               is_state('device_tracker.lizzie', 'not_home') and
               is_state('device_tracker.pi_mate9', 'home') and
               is_state('device_tracker.kristen', 'home') -%}
          Harriet and lizzie have left but kristen is here with sam
        {% endif %}
        {%- if is_state('device_tracker.hazbag', 'not_home') and
               is_state('device_tracker.pi_mate9', 'home') and
               is_state('device_tracker.lizzie', 'home') and
               is_state('device_tracker.kristen', 'not_home') -%}
          Harriet and kristen have left. but liz and sam are in
        {% endif %}
        {%- if is_state('device_tracker.hazbag', 'not_home') and
               is_state('device_tracker.lizzie', 'home') and
               is_state('device_tracker.kristen', 'not_home') and
               is_state('device_tracker.pi_mate9', 'home') -%}
          Lizzie and kristen have left. but haz is in with sam.
        {% endif %}

# Today will be {{states.sensor.dark_sky_hourly_summary.state|replace(".", "")}}
  LocateIntent:
    action:
      service: notify.pushbullet
      data_template:
        message: The location of {{ User }} has been queried via Alexa.
    speech:
      type: plain
      text: >
        {%- for state in states.device_tracker -%}
          {%- if state.name.lower() == User.lower() -%}
            {{ state.name }} is at {{ state.state }}
          {%- endif -%}
        {%- else -%}
          I am sorry, I do not know where {{ User }} is.
        {%- endfor -%}
    # card:
    #   type: simple
    #   title: Sample title
    #   content: Some more content

  RunScriptIntent:
    action:
      service: script.turn_on
      data_template:
        entity_id: script.{{ Script | replace(" ", "_") }}
    speech:
      type: plain
      text: !include alexa_confirm.yaml

  ActivateSceneIntent:
    action:
      service: scene.turn_on
      data_template:
        entity_id: scene.{{ Scene | replace(" ", "_") }}
    speech:
      type: plain
      text: !include alexa_confirm.yaml

  WhatTempIntent:
    action:
      service_template: notify.house
      data_template:
        message: "It is currently {{ states.sensor.lounge_temperature.state | int }} degrees and the heating is set to {{ states.sensor.target_temperature.state }}"
        title: "Somebody asked alexa about the temperature"
    speech:
      type: plain
      text: >
        It is currently {{ states.sensor.lounge_temperature.state | int }} degrees and the heating is set to {{ states.sensor.target_temperature.state }}
    # card:
    #   type: simple
    #   title: Sample title
    #   content: Some more content

  MovieTime:
    action:
      - service: homeassistant.turn_off
        data:
          entity_id: scene.movie
    speech:
      type: plain
      text: Enjoy your movie

##################  printer skill
  BedTempON:
    action:
      service: script.turn_on
      data:
        entity_id: script.bedtemp95
    speech:
      type: plain
      text: >
        Alrighty then. Heating the 3D printer bed to 95 degrees celcius for you Sam
  BedTempOFF:
    action:
      service: script.turn_on
      data:
        entity_id: script.bedtemp0
    speech:
      type: plain
      text: >
        Turning off the printers heated bed
  ExtTempON:
    action:
      service: script.turn_on
      data:
        entity_id: script.exttemp240
    speech:
      type: plain
      text: >
        Ok. Heating the 3D printer extruder to 240 degrees celcius
  ExtTempOFF:
    action:
      service: script.turn_on
      data:
        entity_id: script.exttemp0
    speech:
      type: plain
      text: >
        Turning off the printers extruder
  HeatAllON:
    action:
      service: script.turn_on
      data:
        entity_id: script.heatall
    speech:
      type: plain
      text: >
        Heating the whole printer
  HeatAllOFF:
    action:
      service: script.turn_on
      data:
        entity_id: script.heatoff
    speech:
      type: plain
      text: >
        Turning off the extruder and heat bed
  Pause:
    action:
      service: script.turn_on
      data:
        entity_id: script.pause
    speech:
      type: plain
      text: >
        Pausing the print
  Cancel:
    action:
      service: script.turn_on
      data:
        entity_id: script.cancel
    speech:
      type: plain
      text: >
        Cancelling the print
  Resume:
    action:
      service: script.turn_on
      data:
        entity_id: script.resume
    speech:
      type: plain
      text: >
        Resuming the print
  HomeXY:
    action:
      service: script.turn_on
      data:
        entity_id: script.homexy
    speech:
      type: plain
      text: >
        Homing the x and y axis'
  HomeZ:
    action:
      service: script.turn_on
      data:
        entity_id: script.homez
    speech:
      type: plain
      text: >
        Homing the z axis
  HomeXYZ:
    action:
      service: script.turn_on
      data:
        entity_id: script.homexyz
    speech:
      type: plain
      text: >
        Homing all axis'
  FilamentClean:
    action:
      service: script.turn_on
      data:
        entity_id: script.filamentclean
    speech:
      type: plain
      text: >
        {{ [
        "It's blocked again?",
        "Isn't 3D printing shit and infuriating",
        "why do we even bother",
        "throw it out of the window",
        "for fucks sake"
        ] | random }}
  ExtrudeManual:
    action:
      - service: mqtt.publish
        data_template:
          payload: "{{Number}}"
          topic: octoprint/extruder/mm
          qos: 0
          retain: true
      - delay: 00:00:02
      - service: script.turn_on
        data:
          entity_id: script.extrudemanual
    speech:
      type: plain
      text: >
        Extruding {{Number}} millimeters of filament
  ExtTempManual:
    action:
      - service: mqtt.publish
        data_template:
          payload: "{{ExtNumber}}"
          topic: octoprint/extruder/temp
          qos: 0
          retain: true
      - delay: 00:00:02
      - service: script.turn_on
        data:
          entity_id: script.exttempmanual
    speech:
      type: plain
      text: >
        Setting the extruder to {{ExtNumber}} degrees
  BedTempManual:
    action:
      - service: mqtt.publish
        data_template:
          payload: "{{BedNumber}}"
          topic: octoprint/bed/temp
          qos: 0
          retain: true
      - delay: 00:00:02
      - service: script.turn_on
        data:
          entity_id: script.bedtempmanual
    speech:
      type: plain
      text: >
        Setting the heat bed to {{BedNumber}} degrees
#   ALARM
  checkalarmtime:
    action:
      service: notify.pushbullet
      data_template:
        message: Your alarm is set for {{states.sensor.wake_up_time_for_alexa.state}}
    speech:
      type: plain
      text: >
        Your alarm is set for {{states.sensor.wake_up_time_for_alexa.state}}
