  intents:
    WhereAreWeIntent:
      speech:
        type: plaintext
        text: >
          {%- if is_state('device_tracker.pi_nexus', 'home') and
                 is_state('device_tracker.hazbag', 'home') and
                 is_state('device_tracker.lizzie', 'home') and
                 is_state('device_tracker.rosie', 'home') -%}
            Everyone is in the house
          {% endif %}
          {%- if is_state('device_tracker.hazbag', 'not_home') and
                 is_state('device_tracker.lizzie', 'home') and
                 is_state('device_tracker.rosie', 'home') -%}
                 is_state('device_tracker.pi_nexus', 'home') and
          Harriet has left. but everyone else is in
          {% endif %}

          {%- if is_state('device_tracker.hazbag', 'home') and
                 is_state('device_tracker.pi_nexus', 'home') and
                 is_state('device_tracker.lizzie', 'not_home') and
                 is_state('device_tracker.rosie', 'home') -%}
            Lizzie has left and rosie, sam and harriet are in.
          {% endif %}

          {%- if is_state('device_tracker.hazbag', 'home') and
                 is_state('device_tracker.lizzie', 'home') and
                 is_state('device_tracker.rosie', 'not_home') -%}
                 is_state('device_tracker.pi_nexus', 'home') and
            Rosie has left. but harriet, sam and lizzie are home.
          {% endif %}

          {%- if is_state('device_tracker.hazbag', 'not_home') and
                 is_state('device_tracker.lizzie', 'not_home') and
                 is_state('device_tracker.rosie', 'not_home') -%}
                 is_state('device_tracker.pi_nexus', 'home') and
            Sam is the only one in.
          {% endif %}

          {%- if is_state('device_tracker.hazbag', 'not_home') and
                 is_state('device_tracker.lizzie', 'not_home') and
                 is_state('device_tracker.pi_nexus', 'home') and
                 is_state('device_tracker.rosie', 'home') -%}
            Harriet and lizzie have left but rosie is here with sam
          {% endif %}
          {%- if is_state('device_tracker.hazbag', 'not_home') and
                 is_state('device_tracker.pi_nexus', 'home') and
                 is_state('device_tracker.lizzie', 'home') and
                 is_state('device_tracker.rosie', 'not_home') -%}
            Harriet and Rosie have left. but liz and sam are in
          {% endif %}
          {%- if is_state('device_tracker.hazbag', 'not_home') and
                 is_state('device_tracker.lizzie', 'home') and
                 is_state('device_tracker.rosie', 'not_home') -%}
                 is_state('device_tracker.pi_nexus', 'home') and
            Lizzie and Rosie have left. but haz is in with sam.
          {% endif %}

# Today will be {{states.sensor.dark_sky_hourly_summary.state|replace(".", "")}}
    LocateIntent:
      action:
        service: notify.pushbullet
        data_template:
          message: The location of {{ User }} has been queried via Alexa.
      speech:
        type: plaintext
        text: >
          {%- for state in states.device_tracker -%}
            {%- if state.name.lower() == User.lower() -%}
              {{ state.name }} is at {{ state.state }}
            {%- endif -%}
          {%- else -%}
            I am sorry, I do not know where {{ User }} is.
          {%- endfor -%}
      # card:
      #   type: simple
      #   title: Sample title
      #   content: Some more content

    RunScriptIntent:
      action:
        service: script.turn_on
        data_template:
          entity_id: script.{{ Script | replace(" ", "_") }}
      speech:
        type: plaintext
        text: !include alexa_confirm.yaml

    ActivateSceneIntent:
      action:
        service: scene.turn_on
        data_template:
          entity_id: scene.{{ Scene | replace(" ", "_") }}
      speech:
        type: plaintext
        text: !include alexa_confirm.yaml

    WhatTempIntent:
      action:
        service_template: notify.kodi
        data_template:
          message: "It is currently {{ states.sensor.lounge_temperature.state | int }} degrees and the heating is set to {{ states.sensor.target_temperature.state }}"
          title: "Somebody asked alexa about the temperature"
      speech:
        type: plaintext
        text: >
          It is currently {{ states.sensor.lounge_temperature.state | int }} degrees and the heating is set to {{ states.sensor.target_temperature.state }}
      # card:
      #   type: simple
      #   title: Sample title
      #   content: Some more content



##################  printer skill
    BedTempON:
      action:
        service: script.turn_on
        data:
          entity_id: script.bedtemp95
      speech:
        type: plaintext
        text: >
          Alrighty then. Heating the 3D printer bed to 95 degrees celcius for you Sam
    BedTempOFF:
      action:
        service: script.turn_on
        data:
          entity_id: script.bedtemp0
      speech:
        type: plaintext
        text: >
          Turning off the printers heated bed
    ExtTempON:
      action:
        service: script.turn_on
        data:
          entity_id: script.exttemp240
      speech:
        type: plaintext
        text: >
          Ok. Heating the 3D printer extruder to 240 degrees celcius for you Sam
    ExtTempOFF:
      action:
        service: script.turn_on
        data:
          entity_id: script.exttemp0
      speech:
        type: plaintext
        text: >
          Turning off the printers extruder
    HeatAllON:
      action:
        service: script.turn_on
        data:
          entity_id: script.heatall
      speech:
        type: plaintext
        text: >
          Heating the whole printer
    HeatAllOFF:
      action:
        service: script.turn_on
        data:
          entity_id: script.heatoff
      speech:
        type: plaintext
        text: >
          Turning off the extruder and heat bed
    Pause:
      action:
        service: script.turn_on
        data:
          entity_id: script.pause
      speech:
        type: plaintext
        text: >
          Pausing the print
    Cancel:
      action:
        service: script.turn_on
        data:
          entity_id: script.cancel
      speech:
        type: plaintext
        text: >
          Cancelling the print
    Resume:
      action:
        service: script.turn_on
        data:
          entity_id: script.resume
      speech:
        type: plaintext
        text: >
          Resuming the print
    Print:
      action:
        service: script.turn_on
        data:
          entity_id: script.print
      speech:
        type: plaintext
        text: >
          Printing the currently selected print. If neccessary the bed will be heated automatically
    HomeXY:
      action:
        service: script.turn_on
        data:
          entity_id: script.homexy
      speech:
        type: plaintext
        text: >
          Homing the x and y axis'
    HomeZ:
      action:
        service: script.turn_on
        data:
          entity_id: script.homez
      speech:
        type: plaintext
        text: >
          Homing the z axis
    HomeXYZ:
      action:
        service: script.turn_on
        data:
          entity_id: script.homexyz
      speech:
        type: plaintext
        text: >
          Homing all axis'
    FilamentClean:
      action:
        service: script.turn_on
        data:
          entity_id: script.filamentclean
      speech:
        type: plaintext
        text: >
          {{ [
          "It's blocked again?",
          "Isn't 3D printing shit and infuriating",
          "why do we even bother",
          "throw it out of the window",
          "for fucks sake",
          ] | random }}
    Extrude:
      action:
        service: notify.printer
        data_template:
          message: "python3 /home/hass/.homeassistant/conf/octo-control/octo-control.py --apikey absalomoctoprintapi --host 10.10.10.195 --port 80 --send-gcode 'G1 F200 E{Number}'"
      speech:
        type: plaintext
        text: >
          Hopefully extruded {Number} amount
