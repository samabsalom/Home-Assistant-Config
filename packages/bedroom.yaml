switch:
  # - platform: mqtt
  #   name: Blinds
  #   state_topic: 'blinds/1/status'
  #   command_topic: 'blinds/1/switch'
  #   optimistic: false
  - platform: mqtt
    name: Bedroom Lamp
    state_topic: 'sonoff/1/status'
    command_topic: 'sonoff/1/switch'
    optimistic: false
  # - platform: mqtt
  #   name: desk
  #   state_topic: 'sonoff/2/status'
  #   command_topic: 'sonoff/2/switch'
  #   optimistic: false
########### DESKTOPS ########################
  - platform: command_line
    switches:
      desktop:
        command_off: "bash /home/homeassistant/.homeassistant/conf/pcoff.sh"  # need to make sure user homeassistant can run this - could copy rebootpi packages shell command to accomplish this
      pc:
        command_off: 'curl http://10.10.10.70:5001/hibernate'

  - platform: wake_on_lan
    mac_address: "00:1A:92:66:F7:22"
    name: linux
    host: 10.10.10.199
  - platform: wake_on_lan
    name: windowswol
    host: 10.10.10.70
    mac_address: D8:CB:8A:C3:8C:A2

  - platform: template
    switches:
      ubuntu:
        value_template: '{{ states.switch.linux.state }}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.linux
        turn_off:
          service: switch.turn_off
          entity_id: switch.desktop
      windows:
        value_template: '{{ states.switch.windowswol.state }}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.windowswol
        turn_off:
          service: switch.turn_off
          entity_id: switch.pc
########### end desktop  ####################

media_player:
  - platform: kodi
    host: !secret kodibedhost
    port: 80
    name: bedroom television
    username: !secret kodibeduser
    password: !secret kodibedpass
    turn_off_action: reboot

script:
  rgboff:
    sequence:
      - service: shell_command.rgboff
  rgbon:
    sequence:
      - service: shell_command.rgbon
  wave:
    sequence:
      - service: shell_command.wave
  rainbow:
    sequence:
      - service: shell_command.rainbow
  changecolour:
    sequence:
      - service: shell_command.changecolour

  bedroomfire:
    sequence:
      - service: media_player.play_media
        entity_id: media_player.bedroom_television
        data:
          media_content_type: video
          media_content_id: http://hybrid.servemp3.com/storage/fireplace.mp4


light:
  - platform: template
    lights:
      bed_light:
        friendly_name: "Bed light"
        turn_on:
          service: script.rgbon
        turn_off:
          service: script.rgboff
  - platform: mqtt_json
    name: Bed strip
    state_topic: "bed/rgb1"
    command_topic: "bed/rgb1/set"
    brightness: true
    rgb: true
    effect: true
    effect_list: [colorfade_slow, colorfade_fast, flash]
    optimistic: false
    qos: 0
  # - platform: mqtt_json
  #   name: "SN1 LED"
  #   state_topic: "bruh/sensornode1"
  #   command_topic: "bruh/sensornode1/set"
  #   brightness: true
  #   flash: true
  #   rgb: true
  #   optimistic: false
  #   qos: 0

input_number:
  rgbblue:
    name: Blue
    initial: 0
    min: 0
    max: 255
    step: 1
  rgbred:
    name: Red
    initial: 0
    min: 0
    max: 255
    step: 1
  rgbgreen:
    name: Green
    initial: 0
    min: 0
    max: 255
    step: 1

shell_command:
  rgboff: curl http://10.10.10.167/ledsoff?fade=500
  rgbon: curl http://10.10.10.167/setleds?r=255&g=255&b=255&fade=1000
  rainbow: curl http://10.10.10.167/rainbow?fade=3000
  wave: curl http://10.10.10.167/wave?r={{ states.input_number.rgbred.state | int }}&g={{ states.input_number.rgbgreen.state | int }}&b={{ states.input_number.rgbblue.state | int }}&fade=5000
  changecolour: curl curl http://10.10.10.167/setleds?r={{ states.input_number.rgbred.state | int }}&g={{ states.input_number.rgbgreen.state | int }}&b={{ states.input_number.rgbblue.state | int }}&fade=1000

# sensor:
#   - platform: mqtt
#     state_topic: "bruh/sensornode1"
#     name: "SN1 Humidity"
#     unit_of_measurement: "%"
#     value_template: '{{ value_json.humidity | round(1) }}'
#
#   - platform: mqtt
#     state_topic: "bruh/sensornode1"
#     name: "SN1 LDR"
#     ##This sensor is not calibrated to actual LUX. Rather, this a map of the input voltage ranging from 0 - 1023.
#     unit_of_measurement: "LUX"
#     value_template: '{{ value_json.ldr }}'
#
#   - platform: mqtt
#     state_topic: "bruh/sensornode1"
#     name: "SN1 PIR"
#     value_template: '{{ value_json.motion }}'
#
#   - platform: mqtt
#     state_topic: "bruh/sensornode1"
#     name: "SN1 Temperature"
#     unit_of_measurement: "°F"
#     value_template: '{{ value_json.temperature | round(1) }}'
#   - platform: mqtt
#     state_topic: "bruh/sensornode1"
#     name: "SN1 Real Feel"
#     unit_of_measurement: "°F"
#     value_template: '{{ value_json.heatIndex | round(1) }}'

group:
  # sensor_node_1_card:
  #   name: Sensor Node 1
  #   entities:
  #     - sensor.sn1_temperature
  #     - sensor.sn1_humidity
  #     - sensor.sn1_ldr
  #     - sensor.sn1_pir
  #     - light.sn1_led
  Bed LED:
    entities:
      - light.bed_light
      - input_number.rgbblue
      - input_number.rgbred
      - input_number.rgbgreen
      - script.rainbow
      - script.wave
      - script.changecolour
  bedroomelectrics:
    entities:
      - light.bed_light
      - switch.bedroom_lamp
      - switch.windows
  Bedroom:
    view: yes
    icon: mdi:hotel
    entities:
      - group.bed_led
      - group.sensor_node_1_card
      - light.bed_strip
      - light.bed_light
      - light.bedroom_light
      - media_player.bedroom_television
      # - switch.blinds
      - switch.ubuntu
      - switch.windows
      - switch.bedroom_lamp
      # - switch.desk
      - group.phone
      - script.bedroomfire
      - script.alarm
      - sensor.monzo_balance
      - automation.wake_up_from_calendar_event
      
